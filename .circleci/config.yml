version: "2.1"

workflows:
  version: 2
  main_workflow:
    jobs:
      - sanity_test:
          matrix: &matrix
            parameters:
              # ansible is branch name in ansible/ansible git repo
              ansible: ["stable-2.9", "stable-2.10", "stable-2.11", "stable-2.12", "stable-2.13", "stable-2.14"]
              image_ubuntu: ["ubuntu-2004:202101-01", "ubuntu-2204:2023.07.2"]
            exclude:
              - ansible: "stable-2.9"
                image_ubuntu: "ubuntu-2204:2023.07.2"
              - ansible: "stable-2.10"
                image_ubuntu: "ubuntu-2204:2023.07.2"
              - ansible: "stable-2.11"
                image_ubuntu: "ubuntu-2204:2023.07.2"
              - ansible: "stable-2.12"
                image_ubuntu: "ubuntu-2204:2023.07.2"
              - ansible: "stable-2.13"
                image_ubuntu: "ubuntu-2204:2023.07.2"
              - ansible: "stable-2.14"
                image_ubuntu: "ubuntu-2004:202101-01"

jobs:
  sanity_test:
    parameters:
      ansible:
        description: Ansible version to use
        type: string
    machine: &ci-machine
      image: << parameters.image_ubuntu >>
    working_directory: ~/ansible_collections/sensu/sensu_go
    steps:
      - wrapper:
          ansible: << parameters.ansible >>
          kind: sanity
          test_commands:
            - run: make sanity

commands:
  run_integration_tests:
    description: Run integration tests
    steps:
      - run: ansible-galaxy collection install community.docker
      - run:
          name: Display scheduled scenarios
          command: |
            circleci tests glob "tests/integration/molecule/*/molecule.yml" \
             | circleci tests split --split-by=timings
      - run: make integration_ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results

  wrapper:
    description: Wrapper command that takes care of venv caching
    parameters:
      ansible:
        description: Ansible version to install
        type: string
      kind:
        description: Test kind (used to construct cache name)
        type: string
      test_commands:
        description: Test commands to execute
        type: steps
    steps:
      - checkout: { path: . }
      - run:
          name: Generate cache id file
          command: |
            rm -f cache-id.txt
            echo "week $(date +%V)" >> cache-id.txt
            echo "ansible << parameters.ansible >>" >> cache-id.txt
            echo "kind << parameters.kind >>" >> cache-id.txt
            echo "cache busting string 2" >> cache-id.txt
      - restore_cache:
          key: '{{ checksum "cache-id.txt" }}'
      - run:
          name: Install Ansible
          command: pip3 install -U https://github.com/ansible/ansible/archive/<< parameters.ansible >>.tar.gz --disable-pip-version-check
      - steps: << parameters.test_commands >>
      - save_cache:
          key: '{{ checksum "cache-id.txt" }}'
          paths:
            - "~/venv"
